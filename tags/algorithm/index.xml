<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on 挥剑对风尘</title>
    <link>https://huijian142857.gitee.io/tags/algorithm/</link>
    <description>Recent content in Algorithm on 挥剑对风尘</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 15 Nov 2017 23:00:00 +0000</lastBuildDate>
    <atom:link href="https://huijian142857.gitee.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>常见容器的实现</title>
      <link>https://huijian142857.gitee.io/post/algorithm_container_implementation/</link>
      <pubDate>Wed, 15 Nov 2017 23:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_container_implementation/</guid>
      <description>常见容器的实现方法，用数组实现一个栈、队列、动态数组 队列的实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39</description>
    </item>
    <item>
      <title>二叉树的相关算法</title>
      <link>https://huijian142857.gitee.io/post/algorithm_binary_tree/</link>
      <pubDate>Fri, 29 Sep 2017 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_binary_tree/</guid>
      <description>以二叉搜索树为例，主要学习以下算法： 插入和删除节点 前序遍历，中序遍历，后序遍历，层次遍历 求二叉树的深度 求两个节点的最低公共祖先节点 1 2 3 4 5</description>
    </item>
    <item>
      <title>单链表算法总结</title>
      <link>https://huijian142857.gitee.io/post/algorithm_single_linked_list/</link>
      <pubDate>Tue, 26 Sep 2017 16:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_single_linked_list/</guid>
      <description>单链表算法的 C++ 11 实现，代码中包含注释。先实现一个简单的链表类，只包含必要的操作： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</description>
    </item>
    <item>
      <title>排序算法简单总结</title>
      <link>https://huijian142857.gitee.io/post/algorithm_sort/</link>
      <pubDate>Sat, 23 Sep 2017 14:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_sort/</guid>
      <description>常用排序算法的 C++ 11 实现，代码中包含注释&amp;hellip; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43</description>
    </item>
    <item>
      <title>AStar寻路算法学习</title>
      <link>https://huijian142857.gitee.io/post/algorithm_astar/</link>
      <pubDate>Thu, 31 Aug 2017 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_astar/</guid>
      <description>AStar 寻路算法可以像 Dijkstra 算法一样保证找到最短路径，同时也像贪心最好优先搜索算法一样使用启发值对算法进行引导，它结合了Dijkstra算法使用的节点</description>
    </item>
    <item>
      <title>常见算法汇总</title>
      <link>https://huijian142857.gitee.io/post/algorithm_common/</link>
      <pubDate>Fri, 08 Jul 2016 18:19:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_common/</guid>
      <description>一些常见算法的汇总 概率计算 1 2 3 4 static bool GetProbability(int percentage) { return Random.Range(0, 100) &amp;lt; percentage; } 判断两个时间段是否相交或重叠 1 bool overlap = a.start &amp;lt; b.end &amp;amp;&amp;amp; b.start &amp;lt; a.end; 通过相交判断，可以求得相交最多的片</description>
    </item>
    <item>
      <title>基于数组的折半查找</title>
      <link>https://huijian142857.gitee.io/post/algorithm_binary_search_array/</link>
      <pubDate>Tue, 29 Jan 2013 10:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_binary_search_array/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //折半查找的迭代实现 int BinarySearch(int *a, const int x, const int n) { int left=0; int right = n-1; while(left&amp;lt;=right) { int middle = (left+right)/2; if(x&amp;lt;a[middle]) right=middle-1; else if(x&amp;gt;a[middle]) left = middle+1; else return middle; } return -1; } 1 2 3 4 5 6</description>
    </item>
  </channel>
</rss>
