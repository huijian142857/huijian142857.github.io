<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unity3d on 挥剑对风尘</title>
    <link>https://huijian142857.gitee.io/tags/unity3d/</link>
    <description>Recent content in Unity3d on 挥剑对风尘</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 05 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://huijian142857.gitee.io/tags/unity3d/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>通用弹窗Popup的顺序弹出逻辑</title>
      <link>https://huijian142857.gitee.io/post/unity3d_popup/</link>
      <pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_popup/</guid>
      <description>游戏中常见的弹窗逻辑，按顺序依次弹出，避免同时乱序弹出。。。 1 2 3 4 5 6 7 8 9 10 11 /// &amp;lt;summary&amp;gt; /// 弹窗对象基类 /// &amp;lt;/summary&amp;gt; public abstract class PopupItem { public bool IsPopupIng { get; set; } public int Priority { get; set;</description>
    </item>
    <item>
      <title>Unity3D Find Reference in Scene</title>
      <link>https://huijian142857.gitee.io/post/unity3d_editor_find_reference/</link>
      <pubDate>Mon, 27 Mar 2023 14:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_editor_find_reference/</guid>
      <description>查找某个资源的引用 || 查找资源在场景中的引用 SearchReferenceInSceneEditorWindow.cs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48</description>
    </item>
    <item>
      <title>Unity3D 知识点</title>
      <link>https://huijian142857.gitee.io/post/unity3d_skill_points/</link>
      <pubDate>Thu, 01 Jul 2021 21:10:22 +0800</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_skill_points/</guid>
      <description>Unity3D 零散知识点记录 常见问题 世界空间（World）：整个虚拟世界的3d空间，在Unity3d中以米作为单位，如长100米宽100米高100米的立</description>
    </item>
    <item>
      <title>Unity3D AssetBundle</title>
      <link>https://huijian142857.gitee.io/post/unity3d_assetbundle/</link>
      <pubDate>Wed, 02 Sep 2020 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_assetbundle/</guid>
      <description>Unity 资源热更新需要把资源打包为 AssetBundle 形式，老方法需要在程序中自动配置打包策略，然后程序管理资源的加载和卸载，最新的 Addressable Asset System 可以进行自动打包。 AssetBundle 打包策</description>
    </item>
    <item>
      <title>Unity3D https ipv6</title>
      <link>https://huijian142857.gitee.io/post/unity3d_https_ipv6/</link>
      <pubDate>Tue, 04 Aug 2020 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_https_ipv6/</guid>
      <description>Unity3D 支持 https 请求，兼容 ipv6 only 网络 （1）使用 HttpWebRequest 进行 Https 访问 Unity 2018 版本之后，如果要使用 https 访问，直接使用替代 www 的 UnityWebRequest 即可，访问 https 只需要指定 certificateHandler 即可进行 https 权限验证</description>
    </item>
    <item>
      <title>Unity 2018.3 Prefab 保存方法</title>
      <link>https://huijian142857.gitee.io/post/unity3d_prefab/</link>
      <pubDate>Fri, 17 May 2019 20:42:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_prefab/</guid>
      <description>Unity 2018 改进了 prefab 使用方法，prefab 可以嵌套，双击 prefab 会在新场景中打开。下面是代码保存 prefab 的方法。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
    <item>
      <title>Unity3D 项目规范</title>
      <link>https://huijian142857.gitee.io/post/unity3d_project/</link>
      <pubDate>Sun, 03 Feb 2019 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_project/</guid>
      <description>项目规范相关 项目代码部分： 创建 Assembly Definition File 可以把当前目录作为一个程序集，变成 dll 文件，这样通过多个程序集来减少编译时间，如果程序集 A 和 B 互相引用，那</description>
    </item>
    <item>
      <title>Unity3D 粒子工具</title>
      <link>https://huijian142857.gitee.io/post/unity3d_particle_tool/</link>
      <pubDate>Wed, 30 Jan 2019 15:10:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_particle_tool/</guid>
      <description>用于统计粒子特效信息，比如粒子个数、三角面数 一般粒子需要统计的信息有 1 2 3 4 5 public int triangles; public bool prewarm = false; public int distortion; public int particleCount; public int materialCount; 粒子中可能包含一些模型，所以</description>
    </item>
    <item>
      <title>Unity3D-优化相关</title>
      <link>https://huijian142857.gitee.io/post/unity3d_performance/</link>
      <pubDate>Sat, 10 Nov 2018 12:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_performance/</guid>
      <description>Unity每次在准备数据并通知GPU渲染的过程称为一次Draw Call。一般情况下，渲染一次拥有一个网格并携带一种材质的物体便会使用一次Dr</description>
    </item>
    <item>
      <title>Unity3D EditorWindow Table</title>
      <link>https://huijian142857.gitee.io/post/unity3d_editor_window_table/</link>
      <pubDate>Wed, 25 Jul 2018 22:17:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_editor_window_table/</guid>
      <description>EditorWindow 中显示表格，类似 Profiler 窗口中的数据显示。先用 Tools 菜单创建 asset 数据，然后在 EditorWindow 中显示。 ProfilerData.cs 1 2 3 4 5 6 7 8 using System.Collections; using System.Collections.Generic; using UnityEngine; public class ProfilerData : ScriptableObject { public List&amp;lt;ProfilerDataElement&amp;gt; dataList = new List&amp;lt;ProfilerDataElement&amp;gt;(); } ProfilerDataElement.cs 1 2 3</description>
    </item>
    <item>
      <title>Unity3D Hierarchy 窗口中显示文字</title>
      <link>https://huijian142857.gitee.io/post/unity3d_hierarchy_gui/</link>
      <pubDate>Tue, 03 Jul 2018 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_hierarchy_gui/</guid>
      <description>unity3d 的 Hierarchy 窗口中，可以在每个 GameObject 后面动态显示一些文字，主要利用了EditorApplication.hierarchyWindowItemOnGU</description>
    </item>
    <item>
      <title>Unity3D 编辑器代码</title>
      <link>https://huijian142857.gitee.io/post/unity3d_editor_code/</link>
      <pubDate>Tue, 03 Jul 2018 14:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_editor_code/</guid>
      <description>下面是一些简单的编辑器用到的函数，一般通过 MenuItem 来添加到菜单中。。。 在 Inspector 中字段的各种特性： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [Header( &amp;#34;My variables&amp;#34; )]</description>
    </item>
    <item>
      <title>Unity3D 节点编辑器</title>
      <link>https://huijian142857.gitee.io/post/unity3d_node_editor/</link>
      <pubDate>Wed, 30 May 2018 21:50:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_node_editor/</guid>
      <description>使用了 GitHub 上的 xNode 插件， 也可以参考 Node_Editor_Framework 插件，相当于 UE4 的蓝图工具，方便做复杂的技能数据配置。 该工具做了小部分修改，如果要正式使用，可能还需要查看源代</description>
    </item>
    <item>
      <title>Unity3D 读取和写入Excel文件</title>
      <link>https://huijian142857.gitee.io/post/unity3d_read_excel/</link>
      <pubDate>Thu, 03 May 2018 22:15:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_read_excel/</guid>
      <description>先下载插件 EPPlus，然后把 EPPlus.dll 放入 Plugins 目录，接着就是编写相关代码。这里采用的方法是，把 excel 表格数据读取到 unity 的 prefab 中。下面是相关代码，也可以直接下</description>
    </item>
    <item>
      <title>AStar寻路算法学习</title>
      <link>https://huijian142857.gitee.io/post/algorithm_astar/</link>
      <pubDate>Thu, 31 Aug 2017 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_astar/</guid>
      <description>AStar 寻路算法可以像 Dijkstra 算法一样保证找到最短路径，同时也像贪心最好优先搜索算法一样使用启发值对算法进行引导，它结合了Dijkstra算法使用的节点</description>
    </item>
    <item>
      <title>Unity3D 协程和线程</title>
      <link>https://huijian142857.gitee.io/post/unity3d_thread/</link>
      <pubDate>Fri, 18 Aug 2017 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_thread/</guid>
      <description>协程Coroutine主要用于控制代码在特定的时机执行，给人感觉和线程Thread一样是在异步执行，但其实协程和Update函数一样是在Un</description>
    </item>
    <item>
      <title>Unity3D 相机移动和缩放</title>
      <link>https://huijian142857.gitee.io/post/unity3d_camera_move/</link>
      <pubDate>Fri, 18 Aug 2017 11:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_camera_move/</guid>
      <description>简单介绍一种控制相机缩放和平移的方法，包含2D相机和3D相机，在 Update 中实现即可。控制视野部分，采用了射线检测的方法。具体的例子，可以新建一个工</description>
    </item>
    <item>
      <title>Unity3D 状态机</title>
      <link>https://huijian142857.gitee.io/post/unity3d_state_machine/</link>
      <pubDate>Fri, 11 Aug 2017 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_state_machine/</guid>
      <description>如果仅仅用一个枚举变量表示状态，那么状态切换的具体过程很难描述，所以需要设计一个有限状态机（FSM）来描述具体变换。针对每个状态，可以设计一</description>
    </item>
    <item>
      <title>Unity3D 消息通知类</title>
      <link>https://huijian142857.gitee.io/post/unity3d_notification/</link>
      <pubDate>Fri, 11 Aug 2017 11:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_notification/</guid>
      <description>下面是一个消息通知中心的类，主要功能是监听事件。额外把 Notifier 抽象出来，可以同时添加多个监听事件。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
    <item>
      <title>Unity3D 协程工具类</title>
      <link>https://huijian142857.gitee.io/post/unity3d_coroutine_tool/</link>
      <pubDate>Fri, 11 Aug 2017 10:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_coroutine_tool/</guid>
      <description>下面是一个协程工具类，用在非继承 MonoBehaviour 的类中方便的使用协程. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</description>
    </item>
    <item>
      <title>Unity3D 文件读写</title>
      <link>https://huijian142857.gitee.io/post/unity3d_txt_read_write/</link>
      <pubDate>Thu, 10 Aug 2017 10:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_txt_read_write/</guid>
      <description>下面先看一个简单的文件读写类，也可以用PlayerPrefs替代这种存储方式。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31</description>
    </item>
    <item>
      <title>Unity3D 工具代码</title>
      <link>https://huijian142857.gitee.io/post/unity3d_tool_code/</link>
      <pubDate>Wed, 09 Aug 2017 17:10:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_tool_code/</guid>
      <description>下面是一些简单的工具函数，常用而已。。。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50</description>
    </item>
    <item>
      <title>Unity3D 游戏开发笔记</title>
      <link>https://huijian142857.gitee.io/post/unity3d_develop_note/</link>
      <pubDate>Fri, 18 Nov 2016 22:20:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_develop_note/</guid>
      <description>使物体位于其它物体之上的Shader 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 Shader &amp;#34;Custom/Self-Illumin/Diffuse&amp;#34; { Properties { _Color (&amp;#34;Main Color&amp;#34;,</description>
    </item>
    <item>
      <title>Unity3D 对象池</title>
      <link>https://huijian142857.gitee.io/post/unity3d_object_pool/</link>
      <pubDate>Fri, 28 Oct 2016 23:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_object_pool/</guid>
      <description>第一种写法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65</description>
    </item>
    <item>
      <title>Unity3D 小地图</title>
      <link>https://huijian142857.gitee.io/post/unity3d_minimap/</link>
      <pubDate>Sat, 10 Sep 2016 22:10:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_minimap/</guid>
      <description>制作小地图，先添加一个Camera专门用来显示地图，设为正交相机，然后有两种制作方法。 直接使用地图相机 调整小地图Camera的Viewpor</description>
    </item>
    <item>
      <title>Unity3D中的Shader</title>
      <link>https://huijian142857.gitee.io/post/unity3d_shader_base/</link>
      <pubDate>Wed, 16 Jul 2014 14:20:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_shader_base/</guid>
      <description>内建Shader 简单的说，Shader是为渲染管线中的特定处理阶段提供算法的一段代码。Shader是伴随着可编程渲染管线出现的，从而可以对渲</description>
    </item>
    <item>
      <title>Unity3D 数学相关</title>
      <link>https://huijian142857.gitee.io/post/unity3d_math/</link>
      <pubDate>Wed, 09 Jul 2014 15:02:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_math/</guid>
      <description>点积 点积，又称为点乘，a.b，是向量对应分量乘积的和，结果为一个标量。 代数定义：[x,y,z].[a,b,c] = ax+by+cz。 几何定义：</description>
    </item>
    <item>
      <title>Unity3D-简单的倒计时</title>
      <link>https://huijian142857.gitee.io/post/unity3d_time_countdown/</link>
      <pubDate>Mon, 09 Jun 2014 12:24:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_time_countdown/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 using UnityEngine; using System.Collections; using System; /* * 用法：新建一个场景，新建一个3D T</description>
    </item>
    <item>
      <title>Unity中的单例</title>
      <link>https://huijian142857.gitee.io/post/unity3d_single_instance/</link>
      <pubDate>Wed, 16 Apr 2014 17:59:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_single_instance/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 static GUIManager myInstance; public static GUIManager Instance { get { if (myInstance == null) myInstance = FindObjectOfType(typeof(GUIManager)) as GUIManager; return myInstance; } } 1 2 3 4 5 6 7 static GUIManager myInstance; public static GUIManager Instance { get { return myInstance; } } void Awake() { myInstance = this; } 1 2 3 4 5 6 7 8</description>
    </item>
    <item>
      <title>Unity3D实现简单的抽奖程序</title>
      <link>https://huijian142857.gitee.io/post/unity3d_lottery/</link>
      <pubDate>Tue, 03 Dec 2013 16:45:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_lottery/</guid>
      <description>下面是具体的代码，注意，我这里用到了NGUI这个插件。大概的原理很简单，就用了2张图片Sprite，同时向下移动，当上面一张图片移动到下面一</description>
    </item>
    <item>
      <title>将Unity3D游戏移植到Android平台上</title>
      <link>https://huijian142857.gitee.io/post/unity3d_android_interaction/</link>
      <pubDate>Fri, 08 Nov 2013 14:05:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_android_interaction/</guid>
      <description>将Unity3D游戏移植到Android平台是一件很容易的事情，只需要在File-&amp;gt;Build Settings中选择Android平台</description>
    </item>
  </channel>
</rss>
