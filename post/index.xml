<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 挥剑对风尘</title>
    <link>https://huijian142857.gitee.io/post/</link>
    <description>Recent content in Posts on 挥剑对风尘</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 05 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://huijian142857.gitee.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>通用弹窗Popup的顺序弹出逻辑</title>
      <link>https://huijian142857.gitee.io/post/unity3d_popup/</link>
      <pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_popup/</guid>
      <description>游戏中常见的弹窗逻辑，按顺序依次弹出，避免同时乱序弹出。。。 1 2 3 4 5 6 7 8 9 10 11 /// &amp;lt;summary&amp;gt; /// 弹窗对象基类 /// &amp;lt;/summary&amp;gt; public abstract class PopupItem { public bool IsPopupIng { get; set; } public int Priority { get; set;</description>
    </item>
    <item>
      <title>计算机程序的构造和解释</title>
      <link>https://huijian142857.gitee.io/post/structure_and_interpretation/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/structure_and_interpretation/</guid>
      <description>计算机程序的构造和解释（原书第2版）中文版 Structure and Interpretation of Computer Programs 程序必须写得能够供人们阅读，偶尔地去供计算机执行。 每个计算机程序都是现实中或者精神中的</description>
    </item>
    <item>
      <title>Unity3D Find Reference in Scene</title>
      <link>https://huijian142857.gitee.io/post/unity3d_editor_find_reference/</link>
      <pubDate>Mon, 27 Mar 2023 14:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_editor_find_reference/</guid>
      <description>查找某个资源的引用 || 查找资源在场景中的引用 SearchReferenceInSceneEditorWindow.cs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48</description>
    </item>
    <item>
      <title>重构-改善既有代码的设计 笔记</title>
      <link>https://huijian142857.gitee.io/post/refactoring_improving_the_design/</link>
      <pubDate>Sun, 22 Aug 2021 10:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/refactoring_improving_the_design/</guid>
      <description>重构 改善既有代码的设计（Refactoring Improving the Design of Existing Code） 笔记 重构（refactoring）可以定义为，在不改变代码外在行为的前提下</description>
    </item>
    <item>
      <title>C# 正则表达式</title>
      <link>https://huijian142857.gitee.io/post/csharp_regular/</link>
      <pubDate>Thu, 01 Jul 2021 21:17:22 +0800</pubDate>
      <guid>https://huijian142857.gitee.io/post/csharp_regular/</guid>
      <description>C# 中正则表达式用法： Regex.IsMatch(filePathName, fileFilter) 限定符： 1 2 3 4 5 6 * 匹配上一个元素零次或多次 + 匹配上一个元素一次或多次 ? 匹配上一个元素零次或一次 {n} 匹配上一个元素恰</description>
    </item>
    <item>
      <title>Unity3D 知识点</title>
      <link>https://huijian142857.gitee.io/post/unity3d_skill_points/</link>
      <pubDate>Thu, 01 Jul 2021 21:10:22 +0800</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_skill_points/</guid>
      <description>Unity3D 零散知识点记录 常见问题 世界空间（World）：整个虚拟世界的3d空间，在Unity3d中以米作为单位，如长100米宽100米高100米的立</description>
    </item>
    <item>
      <title>游戏音乐</title>
      <link>https://huijian142857.gitee.io/post/game_music/</link>
      <pubDate>Sat, 27 Mar 2021 13:44:36 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/game_music/</guid>
      <description>游戏音频：音乐，音效，语音，技术 音乐 游戏音乐类型： 界面音乐（登录、胜利失败等） 场景音乐 （游戏bgm、玩法音乐等） 战斗音乐 （副本音乐、战斗音乐</description>
    </item>
    <item>
      <title>Hugo 安装和使用</title>
      <link>https://huijian142857.gitee.io/post/hugo/</link>
      <pubDate>Mon, 08 Mar 2021 17:28:36 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/hugo/</guid>
      <description>安装 直接下载 hugo 即可，然后随便把 hugo.exe 放到哪里，设置好环境变量 Path，使得可以在命令窗口中使用 再安装好 golang 语言 创建博客 1 2 3 hugo new site MyBlog cd MyBlog git init 安装主</description>
    </item>
    <item>
      <title>网络多人游戏架构与编程 笔记</title>
      <link>https://huijian142857.gitee.io/post/multiplayer_game_programming/</link>
      <pubDate>Mon, 30 Nov 2020 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/multiplayer_game_programming/</guid>
      <description>网络多人游戏架构与编程（Multiplayer Game Programming）笔记 互联网 TCP/IP 模型 分组交换：基于一种叫做存储转发的技术将它们发送到共享</description>
    </item>
    <item>
      <title>Unity3D AssetBundle</title>
      <link>https://huijian142857.gitee.io/post/unity3d_assetbundle/</link>
      <pubDate>Wed, 02 Sep 2020 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_assetbundle/</guid>
      <description>Unity 资源热更新需要把资源打包为 AssetBundle 形式，老方法需要在程序中自动配置打包策略，然后程序管理资源的加载和卸载，最新的 Addressable Asset System 可以进行自动打包。 AssetBundle 打包策</description>
    </item>
    <item>
      <title>Unity3D https ipv6</title>
      <link>https://huijian142857.gitee.io/post/unity3d_https_ipv6/</link>
      <pubDate>Tue, 04 Aug 2020 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_https_ipv6/</guid>
      <description>Unity3D 支持 https 请求，兼容 ipv6 only 网络 （1）使用 HttpWebRequest 进行 Https 访问 Unity 2018 版本之后，如果要使用 https 访问，直接使用替代 www 的 UnityWebRequest 即可，访问 https 只需要指定 certificateHandler 即可进行 https 权限验证</description>
    </item>
    <item>
      <title>PowerShell 导出 Excel 为 Txt</title>
      <link>https://huijian142857.gitee.io/post/powershell_export_excel/</link>
      <pubDate>Mon, 20 May 2019 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/powershell_export_excel/</guid>
      <description>使用 PowerShell 脚本导出 Excel 文件为文本文件 Txt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # export excel file to txt file $files = &amp;#34;aura&amp;#34;, &amp;#34;spell&amp;#34;, &amp;#34;missile&amp;#34; $excel = New-Object -ComObject Excel.Application $excel.Visible</description>
    </item>
    <item>
      <title>Unity 2018.3 Prefab 保存方法</title>
      <link>https://huijian142857.gitee.io/post/unity3d_prefab/</link>
      <pubDate>Fri, 17 May 2019 20:42:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_prefab/</guid>
      <description>Unity 2018 改进了 prefab 使用方法，prefab 可以嵌套，双击 prefab 会在新场景中打开。下面是代码保存 prefab 的方法。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
    <item>
      <title>Unity3D 项目规范</title>
      <link>https://huijian142857.gitee.io/post/unity3d_project/</link>
      <pubDate>Sun, 03 Feb 2019 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_project/</guid>
      <description>项目规范相关 项目代码部分： 创建 Assembly Definition File 可以把当前目录作为一个程序集，变成 dll 文件，这样通过多个程序集来减少编译时间，如果程序集 A 和 B 互相引用，那</description>
    </item>
    <item>
      <title>Unity3D 粒子工具</title>
      <link>https://huijian142857.gitee.io/post/unity3d_particle_tool/</link>
      <pubDate>Wed, 30 Jan 2019 15:10:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_particle_tool/</guid>
      <description>用于统计粒子特效信息，比如粒子个数、三角面数 一般粒子需要统计的信息有 1 2 3 4 5 public int triangles; public bool prewarm = false; public int distortion; public int particleCount; public int materialCount; 粒子中可能包含一些模型，所以</description>
    </item>
    <item>
      <title>常用 CMD 命令</title>
      <link>https://huijian142857.gitee.io/post/cmd_common/</link>
      <pubDate>Thu, 20 Dec 2018 21:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/cmd_common/</guid>
      <description>常用 CMD 命令 计划任务.bat 1 2 schtasks /delete /tn MyTask /f schtasks /create /tn MyTask /tr D:\Build10\start.bat /sc once /f /st 00:10:00 /sd 2019/01/04 start.bat 1 2 cd /d D:\Build11 GameConsole ip=118.25.123.57 port=8503 注意 cd 命令，否则需要手动在计划任务中设置 起始于 (start in) 选项才</description>
    </item>
    <item>
      <title>自动生成 Protocol 的 CSharp 文件</title>
      <link>https://huijian142857.gitee.io/post/cmd_protocol_gen/</link>
      <pubDate>Mon, 10 Dec 2018 22:13:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/cmd_protocol_gen/</guid>
      <description>通过 Protocol Buffer 配置文件自动生成 CSharp 文件的 PowerShell 程序 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51</description>
    </item>
    <item>
      <title>Real-Time Rendering 4th edition 学习笔记</title>
      <link>https://huijian142857.gitee.io/post/realtime_rendering/</link>
      <pubDate>Mon, 26 Nov 2018 21:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/realtime_rendering/</guid>
      <description>Chapter 2 The Graphics Rendering Pipeline Application -&amp;gt; Geometry Processing -&amp;gt; Rasterization -&amp;gt; Pixel Processing Application Stage The developer has full control to determine the implementation. For example, an application stage algorithm or setting could decrease the number of triangles to be rendered. At the end of application stage, the geometry to be rendered is fed to the geometry processing stage. The rendering primitives: points, lines, triangles. To increase performance,</description>
    </item>
    <item>
      <title>Unity3D-优化相关</title>
      <link>https://huijian142857.gitee.io/post/unity3d_performance/</link>
      <pubDate>Sat, 10 Nov 2018 12:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_performance/</guid>
      <description>Unity每次在准备数据并通知GPU渲染的过程称为一次Draw Call。一般情况下，渲染一次拥有一个网格并携带一种材质的物体便会使用一次Dr</description>
    </item>
    <item>
      <title>Unity3D EditorWindow Table</title>
      <link>https://huijian142857.gitee.io/post/unity3d_editor_window_table/</link>
      <pubDate>Wed, 25 Jul 2018 22:17:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_editor_window_table/</guid>
      <description>EditorWindow 中显示表格，类似 Profiler 窗口中的数据显示。先用 Tools 菜单创建 asset 数据，然后在 EditorWindow 中显示。 ProfilerData.cs 1 2 3 4 5 6 7 8 using System.Collections; using System.Collections.Generic; using UnityEngine; public class ProfilerData : ScriptableObject { public List&amp;lt;ProfilerDataElement&amp;gt; dataList = new List&amp;lt;ProfilerDataElement&amp;gt;(); } ProfilerDataElement.cs 1 2 3</description>
    </item>
    <item>
      <title>Unity3D Hierarchy 窗口中显示文字</title>
      <link>https://huijian142857.gitee.io/post/unity3d_hierarchy_gui/</link>
      <pubDate>Tue, 03 Jul 2018 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_hierarchy_gui/</guid>
      <description>unity3d 的 Hierarchy 窗口中，可以在每个 GameObject 后面动态显示一些文字，主要利用了EditorApplication.hierarchyWindowItemOnGU</description>
    </item>
    <item>
      <title>Unity3D 编辑器代码</title>
      <link>https://huijian142857.gitee.io/post/unity3d_editor_code/</link>
      <pubDate>Tue, 03 Jul 2018 14:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_editor_code/</guid>
      <description>下面是一些简单的编辑器用到的函数，一般通过 MenuItem 来添加到菜单中。。。 在 Inspector 中字段的各种特性： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [Header( &amp;#34;My variables&amp;#34; )]</description>
    </item>
    <item>
      <title>Unity3D 节点编辑器</title>
      <link>https://huijian142857.gitee.io/post/unity3d_node_editor/</link>
      <pubDate>Wed, 30 May 2018 21:50:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_node_editor/</guid>
      <description>使用了 GitHub 上的 xNode 插件， 也可以参考 Node_Editor_Framework 插件，相当于 UE4 的蓝图工具，方便做复杂的技能数据配置。 该工具做了小部分修改，如果要正式使用，可能还需要查看源代</description>
    </item>
    <item>
      <title>常见编程方法</title>
      <link>https://huijian142857.gitee.io/post/common_design/</link>
      <pubDate>Wed, 09 May 2018 22:08:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/common_design/</guid>
      <description>一些常见的编程方法汇总 单例模式 确保一个类只有一个实例，有几个要素：私有构造方法、指向自身实例的静态引用、以自身实例为返回值的静态共有方法。单</description>
    </item>
    <item>
      <title>Unity3D 读取和写入Excel文件</title>
      <link>https://huijian142857.gitee.io/post/unity3d_read_excel/</link>
      <pubDate>Thu, 03 May 2018 22:15:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_read_excel/</guid>
      <description>先下载插件 EPPlus，然后把 EPPlus.dll 放入 Plugins 目录，接着就是编写相关代码。这里采用的方法是，把 excel 表格数据读取到 unity 的 prefab 中。下面是相关代码，也可以直接下</description>
    </item>
    <item>
      <title>C# 使用反射向 List 中添加数据</title>
      <link>https://huijian142857.gitee.io/post/csharp_reflection/</link>
      <pubDate>Wed, 03 Jan 2018 22:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/csharp_reflection/</guid>
      <description>Reflection 使你能够获取有关加载的程序集和其中定义的类型的信息，如类、接口和值类型。 程序集包含模块、模块包含类型，而类型包含成员。反射提供封装程序集、</description>
    </item>
    <item>
      <title>常见容器的实现</title>
      <link>https://huijian142857.gitee.io/post/algorithm_container_implementation/</link>
      <pubDate>Wed, 15 Nov 2017 23:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_container_implementation/</guid>
      <description>常见容器的实现方法，用数组实现一个栈、队列、动态数组 队列的实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39</description>
    </item>
    <item>
      <title>二叉树的相关算法</title>
      <link>https://huijian142857.gitee.io/post/algorithm_binary_tree/</link>
      <pubDate>Fri, 29 Sep 2017 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_binary_tree/</guid>
      <description>以二叉搜索树为例，主要学习以下算法： 插入和删除节点 前序遍历，中序遍历，后序遍历，层次遍历 求二叉树的深度 求两个节点的最低公共祖先节点 1 2 3 4 5</description>
    </item>
    <item>
      <title>单链表算法总结</title>
      <link>https://huijian142857.gitee.io/post/algorithm_single_linked_list/</link>
      <pubDate>Tue, 26 Sep 2017 16:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_single_linked_list/</guid>
      <description>单链表算法的 C++ 11 实现，代码中包含注释。先实现一个简单的链表类，只包含必要的操作： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</description>
    </item>
    <item>
      <title>排序算法简单总结</title>
      <link>https://huijian142857.gitee.io/post/algorithm_sort/</link>
      <pubDate>Sat, 23 Sep 2017 14:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_sort/</guid>
      <description>常用排序算法的 C++ 11 实现，代码中包含注释&amp;hellip; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43</description>
    </item>
    <item>
      <title>AStar寻路算法学习</title>
      <link>https://huijian142857.gitee.io/post/algorithm_astar/</link>
      <pubDate>Thu, 31 Aug 2017 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_astar/</guid>
      <description>AStar 寻路算法可以像 Dijkstra 算法一样保证找到最短路径，同时也像贪心最好优先搜索算法一样使用启发值对算法进行引导，它结合了Dijkstra算法使用的节点</description>
    </item>
    <item>
      <title>Unity3D 协程和线程</title>
      <link>https://huijian142857.gitee.io/post/unity3d_thread/</link>
      <pubDate>Fri, 18 Aug 2017 17:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_thread/</guid>
      <description>协程Coroutine主要用于控制代码在特定的时机执行，给人感觉和线程Thread一样是在异步执行，但其实协程和Update函数一样是在Un</description>
    </item>
    <item>
      <title>Unity3D 相机移动和缩放</title>
      <link>https://huijian142857.gitee.io/post/unity3d_camera_move/</link>
      <pubDate>Fri, 18 Aug 2017 11:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_camera_move/</guid>
      <description>简单介绍一种控制相机缩放和平移的方法，包含2D相机和3D相机，在 Update 中实现即可。控制视野部分，采用了射线检测的方法。具体的例子，可以新建一个工</description>
    </item>
    <item>
      <title>Unity3D 状态机</title>
      <link>https://huijian142857.gitee.io/post/unity3d_state_machine/</link>
      <pubDate>Fri, 11 Aug 2017 15:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_state_machine/</guid>
      <description>如果仅仅用一个枚举变量表示状态，那么状态切换的具体过程很难描述，所以需要设计一个有限状态机（FSM）来描述具体变换。针对每个状态，可以设计一</description>
    </item>
    <item>
      <title>Unity3D 消息通知类</title>
      <link>https://huijian142857.gitee.io/post/unity3d_notification/</link>
      <pubDate>Fri, 11 Aug 2017 11:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_notification/</guid>
      <description>下面是一个消息通知中心的类，主要功能是监听事件。额外把 Notifier 抽象出来，可以同时添加多个监听事件。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24</description>
    </item>
    <item>
      <title>Unity3D 协程工具类</title>
      <link>https://huijian142857.gitee.io/post/unity3d_coroutine_tool/</link>
      <pubDate>Fri, 11 Aug 2017 10:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_coroutine_tool/</guid>
      <description>下面是一个协程工具类，用在非继承 MonoBehaviour 的类中方便的使用协程. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42</description>
    </item>
    <item>
      <title>Unity3D 文件读写</title>
      <link>https://huijian142857.gitee.io/post/unity3d_txt_read_write/</link>
      <pubDate>Thu, 10 Aug 2017 10:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_txt_read_write/</guid>
      <description>下面先看一个简单的文件读写类，也可以用PlayerPrefs替代这种存储方式。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31</description>
    </item>
    <item>
      <title>Unity3D 工具代码</title>
      <link>https://huijian142857.gitee.io/post/unity3d_tool_code/</link>
      <pubDate>Wed, 09 Aug 2017 17:10:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_tool_code/</guid>
      <description>下面是一些简单的工具函数，常用而已。。。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50</description>
    </item>
    <item>
      <title>点滴记录</title>
      <link>https://huijian142857.gitee.io/post/other_tips/</link>
      <pubDate>Wed, 12 Apr 2017 17:07:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/other_tips/</guid>
      <description>读过的书： C++ Primer 5th C++类和数据结构，Jeffrey S. Childs著 GPGPU编程技术：图形渲染管线、CUDA OpenGL编程指南 Androi</description>
    </item>
    <item>
      <title>Unity3D 游戏开发笔记</title>
      <link>https://huijian142857.gitee.io/post/unity3d_develop_note/</link>
      <pubDate>Fri, 18 Nov 2016 22:20:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_develop_note/</guid>
      <description>使物体位于其它物体之上的Shader 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 Shader &amp;#34;Custom/Self-Illumin/Diffuse&amp;#34; { Properties { _Color (&amp;#34;Main Color&amp;#34;,</description>
    </item>
    <item>
      <title>Unity3D 对象池</title>
      <link>https://huijian142857.gitee.io/post/unity3d_object_pool/</link>
      <pubDate>Fri, 28 Oct 2016 23:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_object_pool/</guid>
      <description>第一种写法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65</description>
    </item>
    <item>
      <title>Game Programming Patterns</title>
      <link>https://huijian142857.gitee.io/post/game_programming_patterns/</link>
      <pubDate>Sun, 16 Oct 2016 13:23:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/game_programming_patterns/</guid>
      <description>What is Software Architecture? It’s less about writing code than it is about organizing it. Good architecture makes a huge difference in productivity. But, like all things in life, it doesn’t come free. Good architecture takes real effort and discipline. Every time you make a change or implement a feature, you have to work hard to integrate it gracefully into the rest of the program. You have to think about which parts of the program should be decoupled and introduce abstractions at those points.</description>
    </item>
    <item>
      <title>C# in Depth</title>
      <link>https://huijian142857.gitee.io/post/csharp_in_depth/</link>
      <pubDate>Thu, 29 Sep 2016 22:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/csharp_in_depth/</guid>
      <description>The Changing Face of C# Development A Simple Data Type Read-only properties and Weakly typed collections (C# 1)&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 using System.Collections; public class Product { string name; public string Name { get { return name; } } decimal price; public decimal Price { get { return price; } } public Product(string name, decimal price) { this.</description>
    </item>
    <item>
      <title>Unity3D 小地图</title>
      <link>https://huijian142857.gitee.io/post/unity3d_minimap/</link>
      <pubDate>Sat, 10 Sep 2016 22:10:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_minimap/</guid>
      <description>制作小地图，先添加一个Camera专门用来显示地图，设为正交相机，然后有两种制作方法。 直接使用地图相机 调整小地图Camera的Viewpor</description>
    </item>
    <item>
      <title>常见基础知识</title>
      <link>https://huijian142857.gitee.io/post/common_tips/</link>
      <pubDate>Sun, 21 Aug 2016 20:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/common_tips/</guid>
      <description>为什么栈比堆快 分配和释放：堆在分配和释放时都要调用函数，分配时会到堆空间去寻找足够大小的空间，这些都会花费一定的时间，而栈却不需要这些，栈是</description>
    </item>
    <item>
      <title>C#知识点</title>
      <link>https://huijian142857.gitee.io/post/csharp_tips/</link>
      <pubDate>Sun, 14 Aug 2016 20:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/csharp_tips/</guid>
      <description>C# 继承结构 通过继承一个现有的类，新创建的类可以不需要写任何代码， 就可以按照继承来的父类中的合适的访问权限直接拥有所继承的类的功能， 同时还可以</description>
    </item>
    <item>
      <title>常见算法汇总</title>
      <link>https://huijian142857.gitee.io/post/algorithm_common/</link>
      <pubDate>Fri, 08 Jul 2016 18:19:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_common/</guid>
      <description>一些常见算法的汇总 概率计算 1 2 3 4 static bool GetProbability(int percentage) { return Random.Range(0, 100) &amp;lt; percentage; } 判断两个时间段是否相交或重叠 1 bool overlap = a.start &amp;lt; b.end &amp;amp;&amp;amp; b.start &amp;lt; a.end; 通过相交判断，可以求得相交最多的片</description>
    </item>
    <item>
      <title>在Scaleform输入框中弹出Android键盘</title>
      <link>https://huijian142857.gitee.io/post/android_virtual_keyboard/</link>
      <pubDate>Fri, 22 Jan 2016 10:18:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/android_virtual_keyboard/</guid>
      <description>这个虚幻3项目很让人头疼，就这么简单的功能，在scaleform的输入框TextField中弹出android键盘，我做了很久才完成。大致方</description>
    </item>
    <item>
      <title>java中byte[]和int之间的转换</title>
      <link>https://huijian142857.gitee.io/post/java_bytes_to_int/</link>
      <pubDate>Tue, 15 Dec 2015 13:50:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/java_bytes_to_int/</guid>
      <description>转换前，需要先对byte[]认识清楚，所以不得不提到大端Big-endian和小端Little-endian的概念。 java中一个int整数</description>
    </item>
    <item>
      <title>使用Hexo来构建静态博客</title>
      <link>https://huijian142857.gitee.io/post/other_hexo/</link>
      <pubDate>Thu, 05 Nov 2015 21:16:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/other_hexo/</guid>
      <description>Hexo介绍 Hexo是一个基于Node.js的静态博客生成器，功能类似Jekyll。我们只需要写好MarkDown文件，便可利用它生成静态的</description>
    </item>
    <item>
      <title>C&#43;&#43; Primer 第五版 学习笔记 Part III</title>
      <link>https://huijian142857.gitee.io/post/cpp_primer_part_3/</link>
      <pubDate>Thu, 08 Oct 2015 09:09:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/cpp_primer_part_3/</guid>
      <description>Copy Control A class controls what happens when objects of class type are copied, moved, assigned, and destroyed by defining five special member functions: copy constructor, move constructor, copy-assignment operator, move-assignment operator, destructor. The copy and move constructors define what happens when an object is initialized from another object of the same type. The copy and move assignment operators define what happens when we assign an object of a class</description>
    </item>
    <item>
      <title>C&#43;&#43; Primer 第五版 学习笔记 Part I and II</title>
      <link>https://huijian142857.gitee.io/post/cpp_primer_part_1_2/</link>
      <pubDate>Mon, 28 Sep 2015 18:38:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/cpp_primer_part_1_2/</guid>
      <description>基础部分 A stream is a sequence of characters read from or written to an IO device. To handle input, we use an object of type istream named cin; for output, ostream named cout. Also, cerr, clog. All the names defined by standard library are in the std namespace. The value returned from main is a status indicator. A nonzero has a meaning defined by system. The &amp;laquo;</description>
    </item>
    <item>
      <title>为Android游戏接入第三方登录功能</title>
      <link>https://huijian142857.gitee.io/post/android_3rd_login/</link>
      <pubDate>Fri, 28 Aug 2015 16:47:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/android_3rd_login/</guid>
      <description>“游戏客户端”调用“SDK客户端”的登录功能向“SDK服务端”进行身份认证 验证通过后，“游戏客户端”可得到用户信息，根据游戏逻辑可将用户信息</description>
    </item>
    <item>
      <title>Git学习笔记</title>
      <link>https://huijian142857.gitee.io/post/other_git_note/</link>
      <pubDate>Sun, 05 Jul 2015 22:07:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/other_git_note/</guid>
      <description>记录一些常用的 Git 命令，太容易忘了。。。 配置email地址和名字 1 2 git config --global user.name &amp;#34;Your Name&amp;#34; git config --global user.email &amp;#34;email@example.com&amp;#34; 把当前目录变为git仓库，建好后会多出一个.git目</description>
    </item>
    <item>
      <title>Android单例计费类</title>
      <link>https://huijian142857.gitee.io/post/android_single_instance/</link>
      <pubDate>Thu, 23 Apr 2015 16:30:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/android_single_instance/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    <item>
      <title>Android滑动动画ViewFlipper和视频播放VideoView的使用</title>
      <link>https://huijian142857.gitee.io/post/android_view_flipper_video_view/</link>
      <pubDate>Thu, 23 Apr 2015 14:57:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/android_view_flipper_video_view/</guid>
      <description>Android滑动动画，可以用ViewPager或者ViewFlipper实现。ViewPager自带触摸滑动功能，结合Fragment使用</description>
    </item>
    <item>
      <title>C&#43;&#43;单例模板</title>
      <link>https://huijian142857.gitee.io/post/cpp_single_instance_template/</link>
      <pubDate>Tue, 13 Jan 2015 15:20:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/cpp_single_instance_template/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #pragma once namespace MyGame { template&amp;lt;typename T&amp;gt; class Global { public: static void Create() { ASSERT(!s_instance); s_instance = new T; } static void Set(T* obj) { ASSERT(!s_instance);</description>
    </item>
    <item>
      <title>C&#43;&#43;错误笔记</title>
      <link>https://huijian142857.gitee.io/post/cpp_errors/</link>
      <pubDate>Fri, 26 Sep 2014 19:18:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/cpp_errors/</guid>
      <description>fatal error LNK1120: 无法解析的外部命令 需要在多个源文件中共享变量时，可以声明一个静态变量；如果静态变量声明在cpp文件中，会自动初始化，但不利于外部访问；</description>
    </item>
    <item>
      <title>Unity3D中的Shader</title>
      <link>https://huijian142857.gitee.io/post/unity3d_shader_base/</link>
      <pubDate>Wed, 16 Jul 2014 14:20:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_shader_base/</guid>
      <description>内建Shader 简单的说，Shader是为渲染管线中的特定处理阶段提供算法的一段代码。Shader是伴随着可编程渲染管线出现的，从而可以对渲</description>
    </item>
    <item>
      <title>Unity3D 数学相关</title>
      <link>https://huijian142857.gitee.io/post/unity3d_math/</link>
      <pubDate>Wed, 09 Jul 2014 15:02:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_math/</guid>
      <description>点积 点积，又称为点乘，a.b，是向量对应分量乘积的和，结果为一个标量。 代数定义：[x,y,z].[a,b,c] = ax+by+cz。 几何定义：</description>
    </item>
    <item>
      <title>用Intellij Idea创建简单的Servlet</title>
      <link>https://huijian142857.gitee.io/post/java_servlet_idea/</link>
      <pubDate>Sun, 06 Jul 2014 15:07:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/java_servlet_idea/</guid>
      <description>Servlet作为Java服务端程序，使用起来还是挺方便的，下面是具体配置过程，我用的是Intellij Idea。 1.做好必要准备，Inte</description>
    </item>
    <item>
      <title>Unity3D-简单的倒计时</title>
      <link>https://huijian142857.gitee.io/post/unity3d_time_countdown/</link>
      <pubDate>Mon, 09 Jun 2014 12:24:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_time_countdown/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 using UnityEngine; using System.Collections; using System; /* * 用法：新建一个场景，新建一个3D T</description>
    </item>
    <item>
      <title>Unity中的单例</title>
      <link>https://huijian142857.gitee.io/post/unity3d_single_instance/</link>
      <pubDate>Wed, 16 Apr 2014 17:59:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_single_instance/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 static GUIManager myInstance; public static GUIManager Instance { get { if (myInstance == null) myInstance = FindObjectOfType(typeof(GUIManager)) as GUIManager; return myInstance; } } 1 2 3 4 5 6 7 static GUIManager myInstance; public static GUIManager Instance { get { return myInstance; } } void Awake() { myInstance = this; } 1 2 3 4 5 6 7 8</description>
    </item>
    <item>
      <title>编译并使用Lua语言</title>
      <link>https://huijian142857.gitee.io/post/lua_compile/</link>
      <pubDate>Fri, 28 Mar 2014 14:14:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/lua_compile/</guid>
      <description>Lua是一个小巧的脚本语言，该语言设计的目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。 可扩展性。Lua的扩展性非常卓越，</description>
    </item>
    <item>
      <title>Java常用知识点</title>
      <link>https://huijian142857.gitee.io/post/java_skill_points/</link>
      <pubDate>Fri, 28 Mar 2014 11:31:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/java_skill_points/</guid>
      <description>（1）java不支持默认参数，需要用重载来实现 （2）java中要比较字符串是否相等，不能用等号，要用 equals 函数来比较内容 （3）尽量避免使用 try catch 来</description>
    </item>
    <item>
      <title>Unity3D实现简单的抽奖程序</title>
      <link>https://huijian142857.gitee.io/post/unity3d_lottery/</link>
      <pubDate>Tue, 03 Dec 2013 16:45:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_lottery/</guid>
      <description>下面是具体的代码，注意，我这里用到了NGUI这个插件。大概的原理很简单，就用了2张图片Sprite，同时向下移动，当上面一张图片移动到下面一</description>
    </item>
    <item>
      <title>Android知识点</title>
      <link>https://huijian142857.gitee.io/post/android_skill_points/</link>
      <pubDate>Fri, 15 Nov 2013 11:27:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/android_skill_points/</guid>
      <description>下面这段activity的配置可以防止onCreate方法在锁屏或者屏幕旋转时被调用，转而调用onConfigurationChanged方</description>
    </item>
    <item>
      <title>C#中使用DLL文件</title>
      <link>https://huijian142857.gitee.io/post/csharp_dll/</link>
      <pubDate>Mon, 11 Nov 2013 18:14:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/csharp_dll/</guid>
      <description>首先，我们需要在C++程序中导出DLL文件。我使用的是Visual Studio开发，把项目&amp;quot;属性&amp;quot;中的“配置类型”改为&amp;</description>
    </item>
    <item>
      <title>将Unity3D游戏移植到Android平台上</title>
      <link>https://huijian142857.gitee.io/post/unity3d_android_interaction/</link>
      <pubDate>Fri, 08 Nov 2013 14:05:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/unity3d_android_interaction/</guid>
      <description>将Unity3D游戏移植到Android平台是一件很容易的事情，只需要在File-&amp;gt;Build Settings中选择Android平台</description>
    </item>
    <item>
      <title>Android开发错误信息收集</title>
      <link>https://huijian142857.gitee.io/post/android_errors/</link>
      <pubDate>Mon, 28 Oct 2013 11:44:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/android_errors/</guid>
      <description>android sdk 无法更新或更新太慢 备注信息：sdk manager中加入mirrors.opencas.org，强迫http方式；或者下载nvidia提供</description>
    </item>
    <item>
      <title>基于数组的折半查找</title>
      <link>https://huijian142857.gitee.io/post/algorithm_binary_search_array/</link>
      <pubDate>Tue, 29 Jan 2013 10:00:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/algorithm_binary_search_array/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //折半查找的迭代实现 int BinarySearch(int *a, const int x, const int n) { int left=0; int right = n-1; while(left&amp;lt;=right) { int middle = (left+right)/2; if(x&amp;lt;a[middle]) right=middle-1; else if(x&amp;gt;a[middle]) left = middle+1; else return middle; } return -1; } 1 2 3 4 5 6</description>
    </item>
    <item>
      <title>洗衣店管理系统</title>
      <link>https://huijian142857.gitee.io/post/laundry_management_system/</link>
      <pubDate>Thu, 27 Dec 2012 01:02:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/laundry_management_system/</guid>
      <description>需求分析 项目背景 随着人们生活水平的不断提高和生活节奏的加快，不少商务人士的收入与衣物越来越多，而精力、时间却越来越少。减轻日常家务劳动，寻找</description>
    </item>
    <item>
      <title>C&#43;&#43; 指针</title>
      <link>https://huijian142857.gitee.io/post/cpp_pointer/</link>
      <pubDate>Sun, 23 Dec 2012 10:21:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/cpp_pointer/</guid>
      <description>什么是指针呢？指针就是一个变量。从过去的经验知道，如果将变量声明为某个数据类型，那么这个变量就可以存储这种数据类型。int变量可以存储整型，</description>
    </item>
    <item>
      <title>数据库课程设计-学生学籍管理信息系统</title>
      <link>https://huijian142857.gitee.io/post/student_management_system/</link>
      <pubDate>Wed, 19 Dec 2012 15:50:00 +0000</pubDate>
      <guid>https://huijian142857.gitee.io/post/student_management_system/</guid>
      <description>概述 项目背景 随着我国教育体制改革的深入进行，教育系统得到了前所未有的发展。学生管理正在逐步迈向管理信息现代化。但是我国的学生管理信息化水平还</description>
    </item>
  </channel>
</rss>
